" Plugins
call plug#begin('~/.vim/plugged')
source ~/.privatevimrc

" Plug 'google/vim-maktaba'
" Plug 'google/vim-codefmt'
" Plug 'google/vim-glaive'

Plug 'editorconfig/editorconfig-vim'

" Colors
Plug 'jacoborus/tender.vim'

" Completion
Plug 'Valloric/YouCompleteMe'

" Find
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'

" Git
Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-fugitive'

" Misc
Plug 'junegunn/vim-easy-align'
Plug 'scrooloose/nerdtree'
Plug 'scrooloose/nerdcommenter'

Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

" Latex
Plug 'lervag/vimtex'

call plug#end()

" the glaive#Install() should go after the "call vundle#end()"
" call glaive#Install()
" Optional: Enable codefmt's default mappings on the <Leader>= prefix.
" Glaive codefmt plugin[mappings]
" Glaive codefmt google_java_executable="java -jar /path/to/google-java-format-VERSION-all-deps.jar"

" vimtex config
let g:vimtex_compiler_latexmk = {'callback' : 0}
let g:latex_view_general_viewer = "zathura"
let g:vimtex_view_method = "zathura"
let g:tex_conceal = ""

" Use system clipboard
set clipboard=unnamedplus

" UI
set ruler
set number
" set relativenumber
set showcmd
set lazyredraw

let loaded_matchparen = 1
filetype plugin indent on
set spell spelllang=en_us

" Colors
syntax on
colorscheme tender

" Airline
set laststatus=2
let g:airline_theme='luna'

" Misc
set nocp
set wildmenu
set backspace=eol,start,indent
set autoread
set autowrite
set magic

set colorcolumn=80
highlight ColorColumn ctermbg=darkgray

" Change swp file location
set undodir=~/.vim/.undo//
set backupdir=~/.vim/.backup//
set directory=~/.vim/.swp//

if has('persistent_undo')      "check if your vim version supports it
  set undofile                 "turn on the feature  
  set undodir=$HOME/.vim/undo  "directory where the undo files will be stored
  endif     


" Tabs
set tabstop=8
set softtabstop=4
set shiftwidth=4
set expandtab

set expandtab
set smarttab
set autoindent
filetype indent plugin on

" Search
set ignorecase
set incsearch
set hlsearch
set smartcase
set showmatch

" Folding
set nofoldenable
set foldlevelstart=10
set foldmethod=indent

" Splits
set splitbelow
set splitright

" BINDINGS
let mapleader = "\<Space>"


"" Start interactive EasyAlign in visual mode (e.g. vipga)
xmap ga <Plug>(EasyAlign)

"" Start interactive EasyAlign for a motion/text object (e.g. gaip)
nmap ga <Plug>(EasyAlign)

map <C-n> :NERDTreeToggle<CR>

"" Fugitive bindings
nnoremap <leader>gs :Gstatus<CR>
nnoremap <leader>gd :Gdiff<CR>
nnoremap <leader>gD :Gdiff HEAD<CR>
nnoremap <leader>gc :Gcommit<CR>
nnoremap <leader>gl :Git log<CR>
nnoremap <leader>gp :Git push<CR>
nnoremap <leader>gw :Gwrite<CR>
nnoremap <leader>gr :Gremove<CR>
nnoremap <leader>gg :Ggrep<Space>

" Insert mode bindings
inoremap jk <Esc>

" Normal mode bindings
" split settings "
nmap <S-Tab> :tabn <CR>
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

nnoremap <leader>ff :Files <cr>
nnoremap <leader>b :Buffers <cr>
nnoremap <leader>fb :Lines <cr>
nnoremap <leader>s :GFiles? <cr>
" nnoremap <leader>t :call CompTemp() <cr>
nnoremap <leader>m :w <bar> exec ':!make' <CR>

"autocmd filetype c nnoremap <leader>r :w <bar> exec '!gcc -std=c99 '.shellescape('%').' -o '.shellescape('%:r').' .out && ./'.shellescape('%:r').'.out'<CR>
"autocmd filetype cpp,cc nnoremap <leader>r :w <bar> exec '!g++ -g -std=c++11 '.shellescape('%').' -o  '.shellescape('%:r')'.out && ./'.shellescape('%:r')'.out' <CR>
"autocmd filetype python nnoremap <leader>r :w <bar> exec '!python3 ' shellescape(@%, 1)<CR>
"autocmd filetype sh nnoremap <leader>r :w <bar> exec '!sh ' shellescape(@%, 1)<CR>
"autocmd filetype scala nnoremap <leader>r :w <bar> exec '!scala ' shellescape(@%, 1)<CR>
"
"
" Wrapped line relative j and k 
noremap j gj
noremap k gk

" Functions
function CompTemp()
    :read ~/.vim/templates/comp.cc
endfunction!

augroup latex_group
    au Filetype tex nmap <buffer> <F3> <plug>(vimtex-compile)
    au Filetype tex nmap <buffer> <F4> <plug>(vimtex-errors)
    au Filetype tex nmap <buffer> <F5> <plug>(vimtex-view)
augroup END

noremap <F3> :Autoformat<CR>

autocmd Filetype gn setlocal shiftwidth=2 tabstop=2
