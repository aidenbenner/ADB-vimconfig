!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/7918d19/
<C-H>	config/vimrc	/^nnoremap <C-H> <C-W><C-H>$/;"	m
<C-J>	config/vimrc	/^nnoremap <C-J> <C-W><C-J>$/;"	m
<C-K>	config/vimrc	/^nnoremap <C-K> <C-W><C-K>$/;"	m
<C-L>	config/vimrc	/^nnoremap <C-L> <C-W><C-L>$/;"	m
<C-n>	config/vimrc	/^map <C-n> :NERDTreeToggle<CR>$/;"	m
<F3>	config/vimrc	/^noremap <F3> :Autoformat<CR>$/;"	m
<S-Tab>	config/vimrc	/^inoremap <expr><S-Tab>      pumvisible() ? "\\<C-p>" : "\\<S-Tab>"$/;"	m
<S-Tab>	config/vimrc	/^nmap <S-Tab> :tabn <CR>$/;"	m
<Tab>	config/vimrc	/^inoremap <expr><Tab>        pumvisible() ? "\\<C-n>" : "\\<Tab>"$/;"	m
<leader>f	config/vimrc	/^nnoremap <leader>f :FZF <cr>$/;"	m
<leader>m	config/vimrc	/^nnoremap <leader>m :w <bar> exec ':!make' <CR> $/;"	m
<leader>t	config/vimrc	/^nnoremap <leader>t :call CompTemp() <cr>$/;"	m
Adjlist	templates/comp.cc	/^typedef vector<vector<pair<int,int>>> Adjlist;$/;"	t	typeref:typename:vector<vector<pair<int,int>>>	file:
CompTemp	config/vimrc	/^function CompTemp()$/;"	f
DirectoryOfThisScript	config/ycm_extra_conf.py	/^def DirectoryOfThisScript():$/;"	f
EPS	templates/comp.cc	/^#define EPS /;"	d	file:
FlagsForFile	config/ycm_extra_conf.py	/^def FlagsForFile( filename, **kwargs ):$/;"	f
GetCompilationInfoForFile	config/ycm_extra_conf.py	/^def GetCompilationInfoForFile( filename ):$/;"	f
INF	templates/comp.cc	/^#define INF /;"	d	file:
IsHeaderFile	config/ycm_extra_conf.py	/^def IsHeaderFile( filename ):$/;"	f
MOD	templates/comp.cc	/^const ull MOD = 1e9 + 7;$/;"	v	typeref:typename:const ull
MakeRelativePathsInFlagsAbsolute	config/ycm_extra_conf.py	/^def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):$/;"	f
N	templates/comp.cc	/^int N; $/;"	v	typeref:typename:int
SOURCE_EXTENSIONS	config/ycm_extra_conf.py	/^SOURCE_EXTENSIONS = [ '.cpp', '.cxx', '.cc', '.c', '.m', '.mm' ]$/;"	v
compilation_database_folder	config/ycm_extra_conf.py	/^compilation_database_folder = ''$/;"	v
database	config/ycm_extra_conf.py	/^  database = ycm_core.CompilationDatabase( compilation_database_folder )$/;"	v
flags	config/ycm_extra_conf.py	/^flags = [$/;"	v
g:acp_enableAtStartup	config/vimrc	/^let g:acp_enableAtStartup = 1$/;"	v
g:airline_theme	config/vimrc	/^let g:airline_theme='simple'$/;"	v
g:ale_echo_msg_error_str	config/vimrc	/^let g:ale_echo_msg_error_str = 'E'$/;"	v
g:ale_echo_msg_format	config/vimrc	/^let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'$/;"	v
g:ale_echo_msg_warning_str	config/vimrc	/^let g:ale_echo_msg_warning_str = 'W'$/;"	v
g:ale_linters	config/vimrc	/^let g:ale_linters = {$/;"	v
g:clang_auto	config/vimrc	/^let g:clang_auto = 0$/;"	v
g:clang_c_completeopt	config/vimrc	/^let g:clang_c_completeopt = 'menuone'$/;"	v
g:clang_cpp_completeopt	config/vimrc	/^let g:clang_cpp_completeopt = 'menuone'$/;"	v
g:clang_cpp_options	config/vimrc	/^let g:clang_cpp_options = '-std=c++14'$/;"	v
g:clang_exec	config/vimrc	/^let g:clang_exec = 'clang'$/;"	v
g:jedi#auto_vim_configuration	config/vimrc	/^let g:jedi#auto_vim_configuration = 0$/;"	v
g:jedi#completions_enabled	config/vimrc	/^let g:jedi#completions_enabled = 0$/;"	v
g:jedi#smart_auto_mappings	config/vimrc	/^let g:jedi#smart_auto_mappings = 0$/;"	v
g:latex_view_general_viewer	config/vimrc	/^let g:latex_view_general_viewer = "zathura"$/;"	v
g:neocomplete#auto_complete_delay	config/vimrc	/^let g:neocomplete#auto_complete_delay = 0$/;"	v
g:neocomplete#enable_at_startup	config/vimrc	/^let g:neocomplete#enable_at_startup = 1$/;"	v
g:neocomplete#enable_smart_case	config/vimrc	/^let g:neocomplete#enable_smart_case = 1$/;"	v
g:neocomplete#force_omni_input_patterns	config/vimrc	/^  let g:neocomplete#force_omni_input_patterns = {}$/;"	v
g:neocomplete#force_omni_input_patterns	config/vimrc	/^let g:neocomplete#force_omni_input_patterns.javascript = '[^. \\t]\\.\\w*'$/;"	v
g:neocomplete#sources#omni#input_patterns	config/vimrc	/^  let g:neocomplete#sources#omni#input_patterns = {}$/;"	v
g:neocomplete#sources#omni#input_patterns	config/vimrc	/^let g:neocomplete#sources#omni#input_patterns.c = '[^.[:digit:] *\\t]\\%(\\.\\|->\\)\\w*'$/;"	v
g:neocomplete#sources#omni#input_patterns	config/vimrc	/^let g:neocomplete#sources#omni#input_patterns.cpp = '[^.[:digit:] *\\t]\\%(\\.\\|->\\)\\w*\\|\\h/;"	v
g:neocomplete#sources#omni#input_patterns	config/vimrc	/^let g:neocomplete#sources#omni#input_patterns.python = '\\%([^. \\t]\\.\\|^\\s*@\\|^\\s*from\\s./;"	v
g:neocomplete#sources#omni#input_patterns	config/vimrc	/^let g:neocomplete#sources#omni#input_patterns.tex =$/;"	v
g:neocomplete#sources#syntax#min_keyword_length	config/vimrc	/^let g:neocomplete#sources#syntax#min_keyword_length = 3$/;"	v
g:tex_conceal	config/vimrc	/^let g:tex_conceal = ""$/;"	v
g:vimtex_compiler_latexmk	config/vimrc	/^let g:vimtex_compiler_latexmk = {'callback' : 0}$/;"	v
g:vimtex_view_method	config/vimrc	/^let g:vimtex_view_method = "zathura"$/;"	v
g:ycm_complete_in_comments	config/vimrc	/^let g:ycm_complete_in_comments=0$/;"	v
g:ycm_global_ycm_extra_conf	config/vimrc	/^let g:ycm_global_ycm_extra_conf='~\/.ycm_extra_conf.py'$/;"	v
jk	config/vimrc	/^inoremap jk <Esc>$/;"	m
lat	config/redshift.conf	/^lat=43.4$/;"	k	section:manual
latex_group	config/vimrc	/^augroup latex_group$/;"	a
ll	templates/comp.cc	/^typedef long long ll;$/;"	t	typeref:typename:long long	file:
loaded_matchparen	config/vimrc	/^let loaded_matchparen = 1$/;"	v
lon	config/redshift.conf	/^lon=80.5$/;"	k	section:manual
main	templates/comp.cc	/^int main()$/;"	f	typeref:typename:int
manual	config/redshift.conf	/^[manual]$/;"	s
mapleader	config/vimrc	/^let mapleader = "\\<Space>"$/;"	v
provider	config/redshift.conf	/^location-provider=manual$/;"	k	section:redshift
redshift	config/redshift.conf	/^[redshift]$/;"	s
ull	templates/comp.cc	/^typedef unsigned long long ull;$/;"	t	typeref:typename:unsigned long long	file:
